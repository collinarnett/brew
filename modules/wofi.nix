{ config, lib, pkgs, ... }:

with lib;

let
  cfg = config.programs.wofi;
  eitherStrBoolInt = with types; either str (either bool int);
  optionalPackage = opt:
    optional (opt != null && opt.package != null) opt.package;
  removeNulls = filterAttrs (_: v: v != null);
  toWofiConfig = generators.toKeyValue {
    mkKeyValue = key: value:
      let
        value' = if isBool value then
          (if value then "true" else "false")
        else
          toString value;
      in "${key}=${value}";
  };

in {
  options.programs.wofi = with lib.types; {
    enable = mkEnableOption "Wofi";

    style = mkOption {
      type = nullOr (either path str);
      default = null;
      description = ''
        Specifies the CSS file file to use as the stylesheet.
      '';
    };

    color = mkOption {
      type = nullOr (either path str);
      default = null;
      description = ''
        Specifies the colors file to use. 
      '';
    };

    mode = mkOption {
      type = nullOr (enum [ "run" "drun" "dmenu" ]);
      default = "run";
      description = ''
        Specifies the mode to run in. A list of modes can be found in wofi(7).
      '';
    };

    settings = mkOption {
      type = types.attrsOf eitherStrBoolInt;
      default = { };
      description = ''
        Settings.
      '';
    };

    extraConfig = mkOption {
      type = types.lines;
      default = "";
      description = ''
        Extra config
      '';
    };

  };

  config = mkIf cfg.enable {
    home.packages = [ pkgs.wofi ];

    xdg.configFile."wofi/config" = {
      text = ''
        # Generated by Home Manager.
        # See wofi(7)

        style=${cfg.style}
        mode=${cfg.mode}

        ${toWofiConfig (removeNulls cfg.settings)}

        ${cfg.extraConfig}   
      '';
    } // optionalAttrs pkgs.stdenv.hostPlatform.isLinux {
      onChange = ''
        ${pkgs.procps}/bin/pkill -USR1 -u $USER wofi || true
      '';
    };

    xdg.configFile."wofi/style.css" = mkIf (cfg.style != null) {
      source = if builtins.isPath cfg.style || isStorePath cfg.style then
        cfg.style
      else
        pkgs.writeText "wofi/style.css" cfg.style;
    };

    xdg.configFile."wofi/color" = mkIf (cfg.style != null) {
      source = if builtins.isPath cfg.color || isStorePath cfg.color then
        cfg.color
      else
        pkgs.writeText "wofi/color" cfg.color;
    };

  };

}

